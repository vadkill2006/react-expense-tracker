{"version":3,"sources":["component/Transaction.jsx","component/Balance.jsx","component/ExpenseCard.jsx","component/NewTransactions.jsx","component/Transactions.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyle","makeStyles","list","marginTop","border","Transaction","transaction","deleteTransaction","classes","color","amount","Math","abs","ListItem","className","style","background","ListItemIcon","onClick","id","ListItemText","primary","text","balance","fontSize","marginBottom","Balance","transactions","total","map","reduce","item","toFixed","Box","Typography","container","display","padding","flex","income","expense","ExpenseCard","filter","acc","Card","CardContent","constainer","flexDirection","button","NewTransactions","addTransaction","useState","setText","setAmount","variant","TextField","label","onChange","e","target","value","Button","floor","random","component","Transactions","Divider","List","header","margin","textTransform","width","borderRadius","height","note","App","localStorage","getItem","console","log","JSON","parse","getTransaction","setTransaction","useEffect","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.829d1339.chunk.js","sourcesContent":["import { ListItem, ListItemIcon, ListItemText, makeStyles } from '@material-ui/core'\r\nimport React from 'react'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\nconst useStyle = makeStyles({\r\n    list: {\r\n        marginTop: 10,\r\n        border: '1px solid #f6f6f6'\r\n    },\r\n})\r\n\r\nconst Transaction = ({ transaction, deleteTransaction }) => {\r\n    const classes = useStyle();\r\n\r\n    const color = transaction.amount >= 0 ? 'green' : 'red';\r\n    const sign = transaction.amount >= 0 ? '₹' : '- ₹';\r\n    const amount = sign + Math.abs(transaction.amount);\r\n\r\n    return (\r\n        <ListItem className={classes.list} style={{ background: `${color}`, color: '#fff' }}>\r\n            <ListItemIcon>\r\n                <DeleteIcon onClick={() => deleteTransaction(transaction.id)} />\r\n            </ListItemIcon>\r\n            <ListItemText primary={transaction.text} />\r\n            <ListItemText primary={amount} />\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default Transaction\r\n","import React from 'react'\r\nimport { Box, Typography, makeStyles } from '@material-ui/core';\r\nimport Transaction from './Transaction';\r\n\r\nconst useStyle = makeStyles({\r\n    balance: {\r\n        fontSize: 25,\r\n        marginBottom: 20,\r\n    },\r\n})\r\n\r\nconst Balance = ({ transactions }) => {\r\n    const classes = useStyle();\r\n    const amount = transactions.map(transaction => transaction.amount);\r\n    const total = amount.reduce((amount, item) => amount += item, 0).toFixed(2);\r\n    return (\r\n        <Box>\r\n            <Typography className={classes.balance}>Balance ₹{total}</Typography>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Balance\r\n","import React from 'react'\r\nimport { Box, Card, CardContent, Typography, makeStyles } from '@material-ui/core';\r\n\r\n\r\nconst useStyle = makeStyles({\r\n    container: {\r\n        display: 'flex',\r\n        '& > *': {\r\n            padding: 10,\r\n            flex: 1,\r\n        }\r\n    },\r\n    income: {\r\n        color: 'green',\r\n    },\r\n    expense: {\r\n        color: 'red',\r\n    },\r\n})\r\n\r\nconst ExpenseCard = ({ transactions }) => {\r\n    const classes = useStyle();\r\n    const amount = transactions.map(transaction => transaction.amount);\r\n    const income = amount.filter(item => item > 0).reduce((acc, item) => acc += item, 0).toFixed(2);\r\n    const expense = (amount.filter(item => item < 0).reduce((acc, item) => acc += item, 0) * -1).toFixed(2);\r\n    return (\r\n        <Box className={classes.container}>\r\n            <Card>\r\n                <CardContent>\r\n                    <Typography>Income</Typography>\r\n                    <Typography className={classes.income}>₹{income}</Typography>\r\n                </CardContent>\r\n            </Card>\r\n            <Card>\r\n                <CardContent>\r\n                    <Typography>Expense</Typography>\r\n                    <Typography className={classes.expense}>₹{expense}</Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ExpenseCard\r\n","import { Box, TextField, Typography, makeStyles, Button } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\n\r\nconst useStyle = makeStyles({\r\n    constainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        '& > *': {\r\n            marginTop: 30,\r\n        }\r\n    },\r\n    button: {\r\n        background: '#445A6F',\r\n        color: '#fff',\r\n    }\r\n})\r\n\r\nconst NewTransactions = ({ addTransaction }) => {\r\n    const classes = useStyle();\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState();\r\n\r\n    const newTransaction = () => {\r\n        const transaction = {\r\n            id: Math.floor(Math.random() * 10000),\r\n            text: text,\r\n            amount: +amount,\r\n        }\r\n        addTransaction(transaction);\r\n        setText('');\r\n        setAmount();\r\n    }\r\n    return (\r\n        <Box className={classes.constainer}>\r\n            <Typography variant='h5'>New Transactions</Typography>\r\n            <TextField label='Enter Income/Expense' onChange={(e) => setText(e.target.value)} />\r\n            <TextField label='Enter Amount' onChange={(e) => setAmount(e.target.value)} />\r\n            <Button variant='contained' className={classes.button} onClick={newTransaction}>Add new transaction</Button>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default NewTransactions\r\n","import { Box, Divider, Typography, makeStyles, List } from '@material-ui/core'\r\nimport React from 'react'\r\nimport Transaction from './Transaction'\r\n\r\nconst useStyle = makeStyles({\r\n    component: {\r\n        '& > *': {\r\n            marginBottom: 10,\r\n        }\r\n    }\r\n})\r\n\r\nconst Transactions = ({ transactions, deleteTransaction }) => {\r\n    const classes = useStyle();\r\n    return (\r\n        <Box className={classes.component}>\r\n            <Typography variant='h5'>Transactions History</Typography>\r\n            <Divider />\r\n            <List>\r\n                {transactions.map(transaction => {\r\n                    return <Transaction key={transaction.id} transaction={transaction} deleteTransaction={deleteTransaction} />\r\n                })}\r\n            </List>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Transactions\r\n","import {Typography, makeStyles, Box} from '@material-ui/core';\nimport React, {useState, useEffect} from 'react'\nimport './App.css';\nimport Balance from './component/Balance';\nimport ExpenseCard from './component/ExpenseCard';\nimport NewTransactions from './component/NewTransactions'\nimport Transactions from './component/Transactions'\n\nconst useStyle = makeStyles({\n  header:{\n    color: 'blue',\n    fontSize: 35,\n    margin: '10px 0',\n    textTransform: 'uppercase',\n  },\n  component:{\n    background:'#fff',\n    width: 800,\n    borderRadius: 20,\n    padding: 10,\n    display: 'flex',\n    '& > *': {\n      width:'50%',\n      padding: 10,\n      height: '70vh',\n    },\n  },\n  note:{\n    marginTop: 50,\n    color: 'red',\n  },\n  \n})\n\nconst getTransaction = () =>{\n    let transaction = localStorage.getItem('Transactions');\n    console.log(transaction);\n    if(transaction) {\n      return JSON.parse(localStorage.getItem('Transactions'));\n    }else{\n      return []\n    }\n\n}\n\nfunction App() {\n  const classes = useStyle();\n  const [transactions, setTransaction] = useState(\n    // {id:1, text:'Momos', amount: -20},\n    // {id:2, text:'Salary', amount: 3000},\n    // {id:3, text:'Book', amount: -100},\n    // {id:4, text:'Bonus', amount: 1500},\n    getTransaction()\n  )\n\n  const deleteTransaction = (id) =>{\n    setTransaction(transactions.filter(transaction => transaction.id !== id))\n  }\n\n  const addTransaction = (transaction) =>{\n    setTransaction(transactions => [transaction, ...transactions])\n  }\n\n  useEffect(() => {\n    localStorage.setItem('Transactions', JSON.stringify(transactions))\n  }, [transactions]);\n  return (\n    <div className=\"App\">\n      <Typography className={classes.header}>Expense Tracker</Typography>\n      <Box className={classes.component}>\n        <Box>\n          <Balance transactions={transactions}/>\n          <ExpenseCard transactions={transactions}/>\n          <NewTransactions addTransaction={addTransaction}/>\n        </Box>\n        <Box>\n          <Transactions transactions={transactions} deleteTransaction={deleteTransaction}/>\n        </Box>        \n      </Box>\n      <Typography className={classes.note}>Note - To add an Expense please add \"-\" minus sign before the amount</Typography>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}